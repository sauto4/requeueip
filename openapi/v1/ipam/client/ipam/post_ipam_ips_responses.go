// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2022 The RequeueIP Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package ipam

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/sauto4/requeueip/openapi/v1/ipam/models"
)

// PostIpamIpsReader is a Reader for the PostIpamIps structure.
type PostIpamIpsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostIpamIpsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostIpamIpsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewPostIpamIpsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostIpamIpsOK creates a PostIpamIpsOK with default headers values
func NewPostIpamIpsOK() *PostIpamIpsOK {
	return &PostIpamIpsOK{}
}

/*
PostIpamIpsOK describes a response with status code 200, with default header values.

Success
*/
type PostIpamIpsOK struct {
	Payload *models.CmdAddResult
}

// IsSuccess returns true when this post ipam ips o k response has a 2xx status code
func (o *PostIpamIpsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post ipam ips o k response has a 3xx status code
func (o *PostIpamIpsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post ipam ips o k response has a 4xx status code
func (o *PostIpamIpsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post ipam ips o k response has a 5xx status code
func (o *PostIpamIpsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post ipam ips o k response a status code equal to that given
func (o *PostIpamIpsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post ipam ips o k response
func (o *PostIpamIpsOK) Code() int {
	return 200
}

func (o *PostIpamIpsOK) Error() string {
	return fmt.Sprintf("[POST /ipam/ips][%d] postIpamIpsOK  %+v", 200, o.Payload)
}

func (o *PostIpamIpsOK) String() string {
	return fmt.Sprintf("[POST /ipam/ips][%d] postIpamIpsOK  %+v", 200, o.Payload)
}

func (o *PostIpamIpsOK) GetPayload() *models.CmdAddResult {
	return o.Payload
}

func (o *PostIpamIpsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CmdAddResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostIpamIpsInternalServerError creates a PostIpamIpsInternalServerError with default headers values
func NewPostIpamIpsInternalServerError() *PostIpamIpsInternalServerError {
	return &PostIpamIpsInternalServerError{}
}

/*
PostIpamIpsInternalServerError describes a response with status code 500, with default header values.

Failed to allocate IP addresses
*/
type PostIpamIpsInternalServerError struct {
	Payload models.Error
}

// IsSuccess returns true when this post ipam ips internal server error response has a 2xx status code
func (o *PostIpamIpsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post ipam ips internal server error response has a 3xx status code
func (o *PostIpamIpsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post ipam ips internal server error response has a 4xx status code
func (o *PostIpamIpsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post ipam ips internal server error response has a 5xx status code
func (o *PostIpamIpsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post ipam ips internal server error response a status code equal to that given
func (o *PostIpamIpsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post ipam ips internal server error response
func (o *PostIpamIpsInternalServerError) Code() int {
	return 500
}

func (o *PostIpamIpsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /ipam/ips][%d] postIpamIpsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostIpamIpsInternalServerError) String() string {
	return fmt.Sprintf("[POST /ipam/ips][%d] postIpamIpsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostIpamIpsInternalServerError) GetPayload() models.Error {
	return o.Payload
}

func (o *PostIpamIpsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
