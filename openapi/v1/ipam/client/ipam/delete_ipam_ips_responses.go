// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2022 The RequeueIP Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package ipam

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/sauto4/requeueip/openapi/v1/ipam/models"
)

// DeleteIpamIpsReader is a Reader for the DeleteIpamIps structure.
type DeleteIpamIpsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteIpamIpsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteIpamIpsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewDeleteIpamIpsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteIpamIpsOK creates a DeleteIpamIpsOK with default headers values
func NewDeleteIpamIpsOK() *DeleteIpamIpsOK {
	return &DeleteIpamIpsOK{}
}

/*
DeleteIpamIpsOK describes a response with status code 200, with default header values.

Success
*/
type DeleteIpamIpsOK struct {
}

// IsSuccess returns true when this delete ipam ips o k response has a 2xx status code
func (o *DeleteIpamIpsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete ipam ips o k response has a 3xx status code
func (o *DeleteIpamIpsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete ipam ips o k response has a 4xx status code
func (o *DeleteIpamIpsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete ipam ips o k response has a 5xx status code
func (o *DeleteIpamIpsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete ipam ips o k response a status code equal to that given
func (o *DeleteIpamIpsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete ipam ips o k response
func (o *DeleteIpamIpsOK) Code() int {
	return 200
}

func (o *DeleteIpamIpsOK) Error() string {
	return fmt.Sprintf("[DELETE /ipam/ips][%d] deleteIpamIpsOK ", 200)
}

func (o *DeleteIpamIpsOK) String() string {
	return fmt.Sprintf("[DELETE /ipam/ips][%d] deleteIpamIpsOK ", 200)
}

func (o *DeleteIpamIpsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteIpamIpsInternalServerError creates a DeleteIpamIpsInternalServerError with default headers values
func NewDeleteIpamIpsInternalServerError() *DeleteIpamIpsInternalServerError {
	return &DeleteIpamIpsInternalServerError{}
}

/*
DeleteIpamIpsInternalServerError describes a response with status code 500, with default header values.

Failed to release IP addresses
*/
type DeleteIpamIpsInternalServerError struct {
	Payload models.Error
}

// IsSuccess returns true when this delete ipam ips internal server error response has a 2xx status code
func (o *DeleteIpamIpsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete ipam ips internal server error response has a 3xx status code
func (o *DeleteIpamIpsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete ipam ips internal server error response has a 4xx status code
func (o *DeleteIpamIpsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete ipam ips internal server error response has a 5xx status code
func (o *DeleteIpamIpsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete ipam ips internal server error response a status code equal to that given
func (o *DeleteIpamIpsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete ipam ips internal server error response
func (o *DeleteIpamIpsInternalServerError) Code() int {
	return 500
}

func (o *DeleteIpamIpsInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /ipam/ips][%d] deleteIpamIpsInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteIpamIpsInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /ipam/ips][%d] deleteIpamIpsInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteIpamIpsInternalServerError) GetPayload() models.Error {
	return o.Payload
}

func (o *DeleteIpamIpsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
