// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2022 The RequeueIP Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package ipam

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sauto4/requeueip/openapi/v1/ipam/models"
)

// PostIpamIpsOKCode is the HTTP code returned for type PostIpamIpsOK
const PostIpamIpsOKCode int = 200

/*
PostIpamIpsOK Success

swagger:response postIpamIpsOK
*/
type PostIpamIpsOK struct {

	/*
	  In: Body
	*/
	Payload *models.CmdAddResult `json:"body,omitempty"`
}

// NewPostIpamIpsOK creates PostIpamIpsOK with default headers values
func NewPostIpamIpsOK() *PostIpamIpsOK {

	return &PostIpamIpsOK{}
}

// WithPayload adds the payload to the post ipam ips o k response
func (o *PostIpamIpsOK) WithPayload(payload *models.CmdAddResult) *PostIpamIpsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post ipam ips o k response
func (o *PostIpamIpsOK) SetPayload(payload *models.CmdAddResult) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostIpamIpsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostIpamIpsInternalServerErrorCode is the HTTP code returned for type PostIpamIpsInternalServerError
const PostIpamIpsInternalServerErrorCode int = 500

/*
PostIpamIpsInternalServerError Failed to allocate IP addresses

swagger:response postIpamIpsInternalServerError
*/
type PostIpamIpsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewPostIpamIpsInternalServerError creates PostIpamIpsInternalServerError with default headers values
func NewPostIpamIpsInternalServerError() *PostIpamIpsInternalServerError {

	return &PostIpamIpsInternalServerError{}
}

// WithPayload adds the payload to the post ipam ips internal server error response
func (o *PostIpamIpsInternalServerError) WithPayload(payload models.Error) *PostIpamIpsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post ipam ips internal server error response
func (o *PostIpamIpsInternalServerError) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostIpamIpsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
