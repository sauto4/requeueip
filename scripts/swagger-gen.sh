#!/bin/bash

# Copyright 2022 The RequeueIP Authors.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -o errexit
set -o nounset
set -o pipefail

# CONST
PROJECT_ROOT=$(dirname ${BASH_SOURCE[0]})/..
SWAGGER_PKG=${SWAGGER_PKG:-$(cd ${PROJECT_ROOT}; ls -d -1 ./vendor/github.com/go-swagger/go-swagger 2>/dev/null || echo ../go-swagger)}

# ENV
# Define the output path of the source code generated by swagger.
OUTPUT_BASE_PATH=${OUTPUT_BASE_PATH:-${PROJECT_ROOT}/openapi/v1/ipam}
# Diff
SWAGGER_GEN_TMP_PATH=${CONTROLLER_GEN_TMP_PATH:-${PROJECT_ROOT}/.swagger_gen_tmp}

SPEC="${OUTPUT_BASE_PATH}/openapi.yaml"
if [[ ! -f ${SPEC} ]];then
  echo "Error: spec ${SPEC} does not exist"
  exit 1
fi



swagger() {
  go run ${SWAGGER_PKG}/cmd/swagger/swagger.go -q "$@"
}

validate() {
  swagger validate ${SPEC}
}

clean() {
  rm -rf ${OUTPUT_BASE_PATH}/client
  rm -rf ${OUTPUT_BASE_PATH}/server
  rm -rf ${OUTPUT_BASE_PATH}/models
}

generate() {
  output_path=$1

  swagger generate server \
    -s server \
    -f ${SPEC} \
    --target ${output_path} \
    --default-scheme unix \
    --exclude-main \
    -r ${PROJECT_ROOT}/scripts/boilerplate.txt

  swagger generate client \
    -f ${SPEC} \
    --target ${output_path} \
    --default-scheme unix \
    -r ${PROJECT_ROOT}/scripts/boilerplate.txt
}

verify() {
  trap "cleanup" EXIT SIGINT

  mkdir -p ${SWAGGER_GEN_TMP_PATH}
  cp -a ${OUTPUT_BASE_PATH}/* ${SWAGGER_GEN_TMP_PATH}

  generate ${OUTPUT_BASE_PATH}

  ret=0
  diff -Naupr ${OUTPUT_BASE_PATH} ${SWAGGER_GEN_TMP_PATH} || ret=$?

  if [[ $ret -eq 0 ]];then
    echo "The API for RequeueIP is up to date"
  else
    echo "Error: The API for RequeueIP is out of date, run 'make gen.openapi-gen'"
    exit 1
  fi
}

cleanup() {
  rm -rf ${SWAGGER_GEN_TMP_PATH}
}

help() {
    echo "help"
}

main() {
  case ${1:-none} in
    validate)
      validate
      ;;
    clean)
      clean
      ;;
    gen)
      clean
      generate ${OUTPUT_BASE_PATH}
      ;;
    verify)
      verify
      ;;
    *|help|-h|--help)
      help
      ;;
  esac
}

main "$*"
